import numpy as np

def calculate_cva(maturity, survival_probability, exposure, default_probability, recovery_rate, discount_rate):
    """
    Calculate CVA for a CDS contract.

    Parameters
    ----------
    maturity : int
    survival_probability : array-like
    exposure : array / list
    default_probability : array-like
    recovery_rate : float
    discount_rate : float

    Returns
    -------
    cva : float
        CVA for the CDS contract.
    """
    # time steps for the CDS contract
    timesteps = np.arange(0, maturity + 1)

    # calculating discount factor at time steps
    discount_factor = np.exp(-discount_rate * timesteps)

    # calculating EPE
    epe = exposure * (1 - survival_probability) * (1 - recovery_rate)

    # calculating CVA
    cva = np.sum(epe * default_probability * discount_factor)

    return cva
    
# maturity of CDS as default (5y)
maturity = 5

# survival probability at each time step
survival_probability = np.array([0.95, 0.93, 0.90, 0.87, 0.83, 0.80])

# expected exposure on each time step
exposure = 100e6 * np.ones(maturity + 1)

# default probability on each time step
default_probability = np.array([0.01, 0.02, 0.03, 0.04, 0.05, 0.06])

# ERR on the default
recovery_rate = 0.40

# discount rate
discount_rate = 0.05

# calculate CVA
cva = calculate_cva(maturity, survival_probability, exposure, default_probability, recovery_rate, discount_rate)

print("CVA: {:.2f}".format(cva))

